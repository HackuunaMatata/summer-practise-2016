package com.mycompany.practice_task_3;
// Generated 02.07.2016 16:47:59 by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * FestivalorganizerId generated by hbm2java
 */
@Embeddable
public class FestivalorganizerId  implements java.io.Serializable {


     private String name;
     private String accreditationCountry;

    public FestivalorganizerId() {
    }

    public FestivalorganizerId(String name, String accreditationCountry) {
       this.name = name;
       this.accreditationCountry = accreditationCountry;
    }
   


    @Column(name="Name", nullable=false, length=40)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }


    @Column(name="AccreditationCountry", nullable=false, length=40)
    public String getAccreditationCountry() {
        return this.accreditationCountry;
    }
    
    public void setAccreditationCountry(String accreditationCountry) {
        this.accreditationCountry = accreditationCountry;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof FestivalorganizerId) ) return false;
		 FestivalorganizerId castOther = ( FestivalorganizerId ) other; 
         
		 return ( (this.getName()==castOther.getName()) || ( this.getName()!=null && castOther.getName()!=null && this.getName().equals(castOther.getName()) ) )
 && ( (this.getAccreditationCountry()==castOther.getAccreditationCountry()) || ( this.getAccreditationCountry()!=null && castOther.getAccreditationCountry()!=null && this.getAccreditationCountry().equals(castOther.getAccreditationCountry()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getName() == null ? 0 : this.getName().hashCode() );
         result = 37 * result + ( getAccreditationCountry() == null ? 0 : this.getAccreditationCountry().hashCode() );
         return result;
   }   


}


