package database;
// Generated 15.07.2016 9:53:11 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Questions generated by hbm2java
 */
@Entity
@Table(name = "questions", catalog = "practice_project", uniqueConstraints = @UniqueConstraint(columnNames = {"idevent", "itemname"})
)
public class Questions implements java.io.Serializable {

    private Integer idevent;
    private Integer iditem;
    private Events events;
    private String itemname;
    private String tag;
    private String type;
    private String description;
    private Boolean isActive;
    private Set<Blobs> blobses = new HashSet<Blobs>(0);
    private Set<Numbers> numberses = new HashSet<Numbers>(0);
    private Set<Strings> stringses = new HashSet<Strings>(0);
    private Set<Answers> answerses = new HashSet<Answers>(0);
    private Set<Dates> dateses = new HashSet<Dates>(0);

    public Questions() {
    }

    public Questions(Events events, String itemname, String tag, String type, String description, Boolean isActive, Set<Blobs> blobses, Set<Numbers> numberses, Set<Strings> stringses, Set<Answers> answerses, Set<Dates> dateses) {
        this.events = events;
        this.itemname = itemname;
        this.tag = tag;
        this.type = type;
        this.description = description;
        this.isActive = isActive;
        this.blobses = blobses;
        this.numberses = numberses;
        this.stringses = stringses;
        this.answerses = answerses;
        this.dateses = dateses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "iditem", unique = true, nullable = false)
    public Integer getIditem() {
        return this.iditem;
    }

    public void setIditem(Integer iditem) {
        this.iditem = iditem;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idevent")
    public Events getEvents() {
        return this.events;
    }

    public void setEvents(Events events) {
        this.events = events;
    }

    @Column(name = "itemname", length = 64)
    public String getItemname() {
        return this.itemname;
    }

    public void setItemname(String itemname) {
        this.itemname = itemname;
    }

    @Column(name = "tag", length = 8)
    public String getTag() {
        return this.tag;
    }

    public void setTag(String tag) {
        this.tag = tag;
    }

    @Column(name = "type", length = 8)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "description", length = 64)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "isActive")
    public Boolean getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questions")
    public Set<Blobs> getBlobses() {
        return this.blobses;
    }

    public void setBlobses(Set<Blobs> blobses) {
        this.blobses = blobses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questions")
    public Set<Numbers> getNumberses() {
        return this.numberses;
    }

    public void setNumberses(Set<Numbers> numberses) {
        this.numberses = numberses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questions")
    public Set<Strings> getStringses() {
        return this.stringses;
    }

    public void setStringses(Set<Strings> stringses) {
        this.stringses = stringses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questions")
    public Set<Answers> getAnswerses() {
        return this.answerses;
    }

    public void setAnswerses(Set<Answers> answerses) {
        this.answerses = answerses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questions")
    public Set<Dates> getDateses() {
        return this.dateses;
    }

    public void setDateses(Set<Dates> dateses) {
        this.dateses = dateses;
    }

    public Integer getIdevent() {
        return idevent;
    }

    public void setIdevent(Integer idevent) {
        this.idevent = idevent;
    }

}
