package database;
// Generated 15.07.2016 9:53:11 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Events generated by hbm2java
 */
@Entity
@Table(name="events"
    ,catalog="practice_project"
    , uniqueConstraints = @UniqueConstraint(columnNames="title") 
)
public class Events  implements java.io.Serializable {


     private Integer idevent;
     private String title;
     private byte[] image;
     private Set<Questions> questionses = new HashSet<Questions>(0);
     private Set<Users> userses = new HashSet<Users>(0);

    public Events() {
    }

    public Events(String title, byte[] image, Set<Questions> questionses, Set<Users> userses) {
       this.title = title;
       this.image = image;
       this.questionses = questionses;
       this.userses = userses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idevent", unique=true, nullable=false)
    public Integer getIdevent() {
        return this.idevent;
    }
    
    public void setIdevent(Integer idevent) {
        this.idevent = idevent;
    }

    
    @Column(name="title", unique=true, length=256)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    
    @Column(name="image")
    public byte[] getImage() {
        return this.image;
    }
    
    public void setImage(byte[] image) {
        this.image = image;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="events")
    public Set<Questions> getQuestionses() {
        return this.questionses;
    }
    
    public void setQuestionses(Set<Questions> questionses) {
        this.questionses = questionses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="events")
    public Set<Users> getUserses() {
        return this.userses;
    }
    
    public void setUserses(Set<Users> userses) {
        this.userses = userses;
    }




}


